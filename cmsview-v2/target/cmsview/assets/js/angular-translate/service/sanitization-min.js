angular.module("pascalprecht.translate").provider("$translateSanitization",$translateSanitizationProvider);function $translateSanitizationProvider(){var j,i,b=null,f=false,g=false,c;c={sanitize:function(k,l){if(l==="text"){k=d(k)}return k},escape:function(k,l){if(l==="text"){k=h(k)}return k},sanitizeParameters:function(k,l){if(l==="params"){k=e(k,d)}return k},escapeParameters:function(k,l){if(l==="params"){k=e(k,h)}return k},sce:function(l,m,k){if(m==="text"){l=a(l)}else{if(m==="params"){if(k!=="filter"){l=e(l,h)}}}return l},sceParameters:function(k,l){if(l==="params"){k=e(k,a)}return k}};c.escaped=c.escapeParameters;this.addStrategy=function(l,k){c[l]=k;return this};this.removeStrategy=function(k){delete c[k];return this};this.useStrategy=function(k){f=true;b=k;return this};this.$get=function(n,o){var l={};var k=function(q,s,p,r){angular.forEach(r,function(t){if(angular.isFunction(t)){q=t(q,s,p)}else{if(angular.isFunction(c[t])){q=c[t](q,s,p)}else{if(angular.isString(c[t])){if(!l[c[t]]){try{l[c[t]]=n.get(c[t])}catch(u){l[c[t]]=function(){};throw new Error("pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: '"+t+"'")}}q=l[c[t]](q,s,p)}else{throw new Error("pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: '"+t+"'")}}}});return q};var m=function(){if(!f&&!g){o.warn("pascalprecht.translate.$translateSanitization: No sanitization strategy has been configured. This can have serious security implications. See http://angular-translate.github.io/docs/#/guide/19_security for details.");g=true}};if(n.has("$sanitize")){j=n.get("$sanitize")}if(n.has("$sce")){i=n.get("$sce")}return{useStrategy:(function(p){return function(q){p.useStrategy(q)}})(this),sanitize:function(q,t,s,p){if(!b){m()}if(!s&&s!==null){s=b}if(!s){return q}if(!p){p="service"}var r=angular.isArray(s)?s:[s];return k(q,t,p,r)}}};var h=function(l){var k=angular.element("<div></div>");k.text(l);return k.html()};var d=function(k){if(!j){throw new Error("pascalprecht.translate.$translateSanitization: Error cannot find $sanitize service. Either include the ngSanitize module (https://docs.angularjs.org/api/ngSanitize) or use a sanitization strategy which does not depend on $sanitize, such as 'escape'.")}return j(k)};var a=function(k){if(!i){throw new Error("pascalprecht.translate.$translateSanitization: Error cannot find $sce service.")}return i.trustAsHtml(k)};var e=function(m,n,l){if(angular.isDate(m)){return m}else{if(angular.isObject(m)){var k=angular.isArray(m)?[]:{};if(!l){l=[]}else{if(l.indexOf(m)>-1){throw new Error("pascalprecht.translate.$translateSanitization: Error cannot interpolate parameter due recursive object")}}l.push(m);angular.forEach(m,function(o,p){if(angular.isFunction(o)){return}k[p]=e(o,n,l)});l.splice(-1,1);return k}else{if(angular.isNumber(m)){return m}else{return n(m)}}}}};